name: 'Deploy Go Lambda Function'

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.0'  # Use the version specified in your go.mod file

      - name: Build and package Lambda function
        run: |
          cd lambda/src
          GOOS=linux GOARCH=amd64 go build -o main
          zip -j ../lambda_function.zip main
          cd ../../  # Ensure we go back to the project root directory after zipping
        shell: bash

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform Init
        run: terraform init
        working-directory: ./lambda  # Run Terraform init in the lambda directory

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./lambda  # Run Terraform plan in the lambda directory
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'  # Specify the AWS region

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./lambda  # Run Terraform apply in the lambda directory
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'  # Specify the AWS region
